@page "/fetchdata"

@using BluePope.WorkPortal.Data

@inject IJSRuntime jSRuntime
<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>
<AuthorizeView>
    <Authorized>
        @context.User.Identity.Name
    </Authorized>
</AuthorizeView>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
                <th>File</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in forecasts)
            {
            <tr>
                <td>@item.Date.ToShortDateString()</td>
                <td>
                    @if (item.isEdit)
                    {
                        <input @bind="item.TemperatureC" class="form-control" type="text" />
                    }
                    else
                    {
                        @item.TemperatureC
                    }
                </td>
                <td>@item.TemperatureF</td>
                <td>
                    @if (item.isEdit)
                    {
                        <SummerNote @bind-Contents="@item.Summary" />
                    }
                    <div>@item.Summary</div>
                </td>
                <td>
                    @if (item.isEdit)
                    {
                    }
                    else
                    {
                        @item.File1?.Name
                    }
                </td>
                <td>
                    @if (item.isEdit)
                    {
                        <button class="btn btn-sm btn-primary" @onclick="() => Save(item)">Save</button>
                    }
                    else
                    {
                        <button class="btn btn-sm btn-info" @onclick="() => { item.isEdit = true; }">Edit</button>
                    }
                </td>
            </tr>
            }
        </tbody>
    </table>

    <button class="btn btn-sm btn-primary" @onclick="RunJs">Test</button>
    <div>@_msg</div>
}

@code {
    string _msg = "";
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await new WeatherForecastService().GetForecastAsync(DateTime.Now);
    }

    void Save(WeatherForecast item)
    {
        //Processing ~~~~~
        //End

        //item ReLoad~~~ 
        item.isEdit = false;
    }

    private async Task RunJs()
    {
        _msg = await jSRuntime.InvokeAsync<string>("GetJsTest", new object[] { "test data" });

        StateHasChanged();
    }
}
